{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","isShown","currentTodo","className","map","todo","id","completed","title","type","onClick","userId","classNames","TodoFilter","onInputChange","onFilterSelect","useState","currentFilter","setCurrentFilter","inputValue","setInputValue","value","onChange","event","currentTarget","placeholder","target","style","pointerEvents","Loader","TodoModal","loading","user","close","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","defaultUser","phone","defaultTodo","App","isLoading","setIsLoading","isModalLoading","setIsModalLoading","setTodos","currentTodos","setCurrentTodos","isModalShown","setIsModalShown","currentUser","setCurrentUser","selectedTodo","setSelectedTodo","loadingData","a","todosList","onShowModal","userDetails","useEffect","matchedTodos","filter","toLowerCase","includes","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7a2800d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  isShown: (userId: number, todo: Todo) => void;\n  currentTodo: Todo;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, isShown, currentTodo }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  isShown(todo.userId, todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': currentTodo.id !== todo.id },\n                    { 'fa-eye-slash': currentTodo.id === todo.id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\n\ntype Props = {\n  onInputChange: (value: string) => void;\n  onFilterSelect: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onInputChange,\n  onFilterSelect,\n}) => {\n  const [currentFilter, setCurrentFilter] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={currentFilter}\n            onChange={(event) => {\n              setCurrentFilter(event.currentTarget.value);\n              onFilterSelect(event.currentTarget.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={event => {\n            onInputChange(event.target.value);\n            setInputValue(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputValue && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onInputChange('');\n                setInputValue('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype Props = {\n  loading: boolean;\n  user: User;\n  todo: Todo;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  loading,\n  user,\n  todo,\n  close,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst defaultUser: User = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n\nconst defaultTodo: Todo = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalLoading, setIsModalLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [currentTodos, setCurrentTodos] = useState<Todo[]>([]);\n  const [isModalShown, setIsModalShown] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User>(defaultUser);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(defaultTodo);\n\n  const loadingData = async () => {\n    setIsLoading(true);\n\n    try {\n      const todosList = await getTodos();\n\n      setIsLoading(false);\n      setTodos(todosList);\n      setCurrentTodos(todosList);\n    } catch (error) {\n      setIsLoading(false);\n      setTodos([]);\n      setCurrentTodos([]);\n    }\n  };\n\n  const onShowModal = async (userId: number, todo: Todo) => {\n    setIsModalShown(true);\n    setIsModalLoading(true);\n    setSelectedTodo(todo);\n\n    try {\n      const userDetails = await getUser(userId);\n\n      setIsModalLoading(false);\n      setCurrentUser(userDetails);\n    } catch (error) {\n      setIsModalLoading(false);\n      setCurrentUser(defaultUser);\n    }\n  };\n\n  const onModalClose = () => {\n    setIsModalShown(false);\n    setSelectedTodo(defaultTodo);\n  };\n\n  const onFilterSelect = (value: string) => {\n    const filteredTodos = todos.filter(todo => {\n      if (value === 'completed') {\n        return todo.completed;\n      }\n\n      if (value === 'active') {\n        return !todo.completed;\n      }\n\n      return todo;\n    });\n\n    setCurrentTodos(filteredTodos);\n  };\n\n  const onInputChange = (value: string) => {\n    const matchedTodos = todos.filter(todo => {\n      return todo.title.toLowerCase().includes(value.toLowerCase());\n    });\n\n    setCurrentTodos(matchedTodos);\n  };\n\n  useEffect(() => {\n    loadingData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onInputChange={onInputChange} onFilterSelect={onFilterSelect} />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={currentTodos}\n                      isShown={onShowModal}\n                      currentTodo={selectedTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalShown && (\n        <TodoModal\n          loading={isModalLoading}\n          user={currentUser}\n          todo={selectedTodo}\n          close={onModalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}